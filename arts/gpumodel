#!/usr/bin/ruby
#
# NAME
#   gpumodel
#
# SYNOPSIS:
#   From command line,
#
#     gpumodel [<regular_expression>]
#
#   In batch files,
#
#     art <art_id> do
#       localPathName 'gpumodel'
#       arguments <regular_expression>
#     end
#
# DESCRIPTION
#   The 'gpumodel' checks if a given Ruby's regular expression <regular_expression> matches
#   with the GPU model name of the host on which the 'gpumodel' runs or not.
#   It puts the ART score 1 to standard output if <regular_expression> matches with the GPU model 
#   name or puts the ART score 0 otherwise.
#
#   If you want to know the GPU model name of your machine, run 'gpumodel' without 
#   any command line argument. It will print the GPU model name.
#
#   For example, it prints '1' if the GPU model name starts with 'NVIDIA' or puts '0' otherwise.
#
#     gpumodel 'NVIDIA'
#  
#   In the following case, the job 'job1' in a batch file will be executed on an Xgrid agent
#   if the GPU model name starts with 'NVIDIA' such as 'NVIDIA GeForce 9400M'.
#
#     art 'withNVIDIAGPU' do
#       localPathName 'gpumodel'
#       arguments '^NVIDIA'
#     end
#
#     job 'job1' do
#       ...
#       ...
#       arts 'withNVIDIAGPU'
#     end
#
# AUTHOR
#   Tetsuya SUZUKI <tetsuya[at]sic.shibaura-it.ac.jp> (Please replace '[at]' with '@')
#
#

cmd = "/usr/sbin/system_profiler SPDisplaysDataType"
stdout = IO.popen(cmd)
stdout.sync = true
while line = stdout.gets
  line.chomp!
  if /Chipset Model:\s*(.*)/ =~ line
    modelName = $1
    break
  end
end
stdout.close

if ARGV.size == 0
  puts modelName
elsif /#{ARGV[0]}/ =~ modelName
  puts 1
else
  puts 0
end
