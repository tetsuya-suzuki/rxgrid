#!/usr/bin/ruby
#
# NAME
#   macmodel
#
# SYNOPSIS:
#   From command line,
#
#     macmodel [<regular_expression>]
#
#   In batch files,
#
#     art <art_id> do
#       localPathName 'macmodel'
#       arguments <regular_expression>
#     end
#
# DESCRIPTION
#   The 'macmodel' checks if a given Ruby's regular expression <regular_expression> matches
#   with the model name on which the 'macmodel' runs or not.
#   It puts the ART score 1 to standard output if <regular_expression> matches with the model name
#   or puts the ART score 0 otherwise.
#
#   If you want to know the Mac model name of your machine, run 'macmodel' without 
#   any command line argument. It will print the model name.
#
#
#   For example, it prints '1' if the Mac model name starts with 'MacBook' or puts '0' otherwise.
#
#     macmodel '^MacBook'
#
#   In the following case, the job 'job1' in a batch file will be executed on an Xgrid agent
#   if the Mac model name starts with 'MacBook' such as 'MacBook Air'.
#
#     art 'onMacBook' do
#       localPathName 'macmodel'
#       arguments '^MacBook'
#     end
#
#     job 'job1' do
#       ...
#       ...
#       arts 'onMacBook'
#     end
#
# AUTHOR
#   Tetsuya SUZUKI <tetsuya[at]sic.shibaura-it.ac.jp> (Please replace '[at]' with '@')
#
#

cmd = "/usr/sbin/system_profiler SPHardwareDataType"
stdout = IO.popen(cmd)
stdout.sync = true
while line = stdout.gets
  line.chomp!
  if /Model Name:\s*(.*)/ =~ line
    modelName = $1
    break
  end
end
stdout.close

if ARGV.size == 0
  puts modelName
elsif /#{ARGV[0]}/ =~ modelName
  puts 1
else
  puts 0
end
